# load hasil pelatihan untuk di uji
trained_model = load_model(checkpoint_filepath)

# pengujian dengan data uji
trained_model.evaluate(test_generator, verbose=1)


# Confusion Matrix
# Y_pred = model.predict(val_generator, val_generator.samples / val_generator.batch_size + 1)

import seaborn as sns
predictions  = model.predict(test2_generator, test2_generator.samples / test2_generator.batch_size + 1 )
predicted_labels = np.argmax(predictions, axis=1)

# Mendapatkan kelas sebenarnya dari generator
true_labels = test2_generator.classes

# Generate confusion matrix
conf_matrix = confusion_matrix(true_labels, predicted_labels)
plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix, annot=True, fmt="d", cmap="Blues", yticklabels=class_names)
plt.xlabel('Predicted')
plt.ylabel('True')
plt.title('Confusion Matrix')
plt.show()

# Generate classification report
report = classification_report(true_labels, predicted_labels, target_names=class_names)
print(report)
